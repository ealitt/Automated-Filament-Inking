"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("three");class s extends t.ImmediateRenderObject{constructor(s,r,o,a){super(r);const n=this,l=new Float32Array(36),h=new Float32Array(36),c=new Float32Array(36);function f(t,s,e){return t+(s-t)*e}function y(t,s,e,i,r,o,a,y,u,A){const d=(e-a)/(y-a),z=n.normal_cache;l[s+0]=i+d*n.delta,l[s+1]=r,l[s+2]=o,h[s+0]=f(z[t+0],z[t+3],d),h[s+1]=f(z[t+1],z[t+4],d),h[s+2]=f(z[t+2],z[t+5],d),c[s+0]=f(n.palette[3*u+0],n.palette[3*A+0],d),c[s+1]=f(n.palette[3*u+1],n.palette[3*A+1],d),c[s+2]=f(n.palette[3*u+2],n.palette[3*A+2],d)}function u(t,s,e,i,r,o,a,y,u,A){const d=(e-a)/(y-a),z=n.normal_cache;l[s+0]=i,l[s+1]=r+d*n.delta,l[s+2]=o;const m=t+3*n.yd;h[s+0]=f(z[t+0],z[m+0],d),h[s+1]=f(z[t+1],z[m+1],d),h[s+2]=f(z[t+2],z[m+2],d),c[s+0]=f(n.palette[3*u+0],n.palette[3*A+0],d),c[s+1]=f(n.palette[3*u+1],n.palette[3*A+1],d),c[s+2]=f(n.palette[3*u+2],n.palette[3*A+2],d)}function A(t,s,e,i,r,o,a,y,u,A){const d=(e-a)/(y-a),z=n.normal_cache;l[s+0]=i,l[s+1]=r,l[s+2]=o+d*n.delta;const m=t+3*n.zd;h[s+0]=f(z[t+0],z[m+0],d),h[s+1]=f(z[t+1],z[m+1],d),h[s+2]=f(z[t+2],z[m+2],d),c[s+0]=f(n.palette[3*u+0],n.palette[3*A+0],d),c[s+1]=f(n.palette[3*u+1],n.palette[3*A+1],d),c[s+2]=f(n.palette[3*u+2],n.palette[3*A+2],d)}function d(t){const s=3*t;0===n.normal_cache[s]&&(n.normal_cache[s+0]=n.field[t-1]-n.field[t+1],n.normal_cache[s+1]=n.field[t-n.yd]-n.field[t+n.yd],n.normal_cache[s+2]=n.field[t-n.zd]-n.field[t+n.zd])}function z(t,s,r,o,a,f){const z=o+1,p=o+n.yd,b=o+n.zd,C=z+n.yd,w=z+n.zd,v=o+n.yd+n.zd,M=z+n.yd+n.zd;let g=0;const F=n.field[o],x=n.field[z],U=n.field[p],_=n.field[C],P=n.field[b],B=n.field[w],N=n.field[v],q=n.field[M];F<a&&(g|=1),x<a&&(g|=2),U<a&&(g|=8),_<a&&(g|=4),P<a&&(g|=16),B<a&&(g|=32),N<a&&(g|=128),q<a&&(g|=64);const G=e[g];if(0===G)return 0;const I=n.delta,T=t+I,j=s+I,E=r+I;1&G&&(d(o),d(z),y(3*o,0,a,t,s,r,F,x,o,z)),2&G&&(d(z),d(C),u(3*z,3,a,T,s,r,x,_,z,C)),4&G&&(d(p),d(C),y(3*p,6,a,t,j,r,U,_,p,C)),8&G&&(d(o),d(p),u(3*o,9,a,t,s,r,F,U,o,p)),16&G&&(d(b),d(w),y(3*b,12,a,t,s,E,P,B,b,w)),32&G&&(d(w),d(M),u(3*w,15,a,T,s,E,B,q,w,M)),64&G&&(d(v),d(M),y(3*v,18,a,t,j,E,N,q,v,M)),128&G&&(d(b),d(v),u(3*b,21,a,t,s,E,P,N,b,v)),256&G&&(d(o),d(b),A(3*o,24,a,t,s,r,F,P,o,b)),512&G&&(d(z),d(w),A(3*z,27,a,T,s,r,x,B,z,w)),1024&G&&(d(C),d(M),A(3*C,30,a,T,j,r,_,q,C,M)),2048&G&&(d(p),d(v),A(3*p,33,a,t,j,r,U,N,p,v)),g<<=4;let O,R,H,S=0,X=0;for(;-1!=i[g+X];)O=g+X,R=O+1,H=O+2,m(l,h,c,3*i[O],3*i[R],3*i[H],f),X+=3,S++;return S}function m(t,s,e,i,r,o,a){const l=3*n.count;if(n.positionArray[l+0]=t[i],n.positionArray[l+1]=t[i+1],n.positionArray[l+2]=t[i+2],n.positionArray[l+3]=t[r],n.positionArray[l+4]=t[r+1],n.positionArray[l+5]=t[r+2],n.positionArray[l+6]=t[o],n.positionArray[l+7]=t[o+1],n.positionArray[l+8]=t[o+2],!0===n.material.flatShading){const t=(s[i+0]+s[r+0]+s[o+0])/3,e=(s[i+1]+s[r+1]+s[o+1])/3,a=(s[i+2]+s[r+2]+s[o+2])/3;n.normalArray[l+0]=t,n.normalArray[l+1]=e,n.normalArray[l+2]=a,n.normalArray[l+3]=t,n.normalArray[l+4]=e,n.normalArray[l+5]=a,n.normalArray[l+6]=t,n.normalArray[l+7]=e,n.normalArray[l+8]=a}else n.normalArray[l+0]=s[i+0],n.normalArray[l+1]=s[i+1],n.normalArray[l+2]=s[i+2],n.normalArray[l+3]=s[r+0],n.normalArray[l+4]=s[r+1],n.normalArray[l+5]=s[r+2],n.normalArray[l+6]=s[o+0],n.normalArray[l+7]=s[o+1],n.normalArray[l+8]=s[o+2];if(n.enableUvs){const s=2*n.count;n.uvArray[s+0]=t[i+0],n.uvArray[s+1]=t[i+2],n.uvArray[s+2]=t[r+0],n.uvArray[s+3]=t[r+2],n.uvArray[s+4]=t[o+0],n.uvArray[s+5]=t[o+2]}n.enableColors&&(n.colorArray[l+0]=e[i+0],n.colorArray[l+1]=e[i+1],n.colorArray[l+2]=e[i+2],n.colorArray[l+3]=e[r+0],n.colorArray[l+4]=e[r+1],n.colorArray[l+5]=e[r+2],n.colorArray[l+6]=e[o+0],n.colorArray[l+7]=e[o+1],n.colorArray[l+8]=e[o+2]),n.count+=3,n.count>=n.maxCount-3&&(n.hasPositions=!0,n.hasNormals=!0,n.enableUvs&&(n.hasUvs=!0),n.enableColors&&(n.hasColors=!0),a(n))}function p(t,s,e){const i=new Float32Array(t.length+e);return i.set(t,0),i.set(s.slice(0,e),t.length),i}this.enableUvs=void 0!==o&&o,this.enableColors=void 0!==a&&a,this.init=function(t){this.resolution=t,this.isolation=80,this.size=t,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.palette=new Float32Array(3*this.size3),this.maxCount=4096,this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=new Float32Array(3*this.maxCount),this.normalArray=new Float32Array(3*this.maxCount),this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount)),this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))},this.begin=function(){this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasUvs=!1,this.hasColors=!1},this.end=function(s){if(0!==this.count){for(let t=3*this.count;t<this.positionArray.length;t++)this.positionArray[t]=0;this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&this.material.map&&(this.hasUvs=!0),this.enableColors&&this.material.vertexColors!==t.NoColors&&(this.hasColors=!0),s(this)}},this.addBall=function(s,e,i,r,o,a){const n=Math.sign(r);r=Math.abs(r);const l=!(null==a);let h=new t.Color(s,e,i);if(l)try{h=a instanceof t.Color?a:Array.isArray(a)?new t.Color(Math.min(Math.abs(a[0]),1),Math.min(Math.abs(a[1]),1),Math.min(Math.abs(a[2]),1)):new t.Color(a)}catch(r){h=new t.Color(s,e,i)}const c=this.size*Math.sqrt(r/o),f=i*this.size,y=e*this.size,u=s*this.size;let A=Math.floor(f-c);A<1&&(A=1);let d=Math.floor(f+c);d>this.size-1&&(d=this.size-1);let z=Math.floor(y-c);z<1&&(z=1);let m=Math.floor(y+c);m>this.size-1&&(m=this.size-1);let p=Math.floor(u-c);p<1&&(p=1);let b,C,w,v,M,g,F,x,U,_,P,B=Math.floor(u+c);for(B>this.size-1&&(B=this.size-1),w=A;w<d;w++)for(M=this.size2*w,x=w/this.size-i,U=x*x,C=z;C<m;C++)for(v=M+this.size*C,F=C/this.size-e,_=F*F,b=p;b<B;b++)if(g=b/this.size-s,P=r/(1e-6+g*g+_+U)-o,P>0){this.field[v+b]+=P*n;const t=Math.sqrt((b-u)*(b-u)+(C-y)*(C-y)+(w-f)*(w-f))/c,s=1-t*t*t*(t*(6*t-15)+10);this.palette[3*(v+b)+0]+=h.r*s,this.palette[3*(v+b)+1]+=h.g*s,this.palette[3*(v+b)+2]+=h.b*s}},this.addPlaneX=function(t,s){const e=this.size,i=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,u=e*Math.sqrt(t/s);for(u>e&&(u=e),a=0;a<u;a++)if(f=a/e,h=f*f,c=t/(1e-4+h)-s,c>0)for(n=0;n<e;n++)for(y=a+n*i,l=0;l<e;l++)o[r*l+y]+=c},this.addPlaneY=function(t,s){const e=this.size,i=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,u,A=e*Math.sqrt(t/s);for(A>e&&(A=e),n=0;n<A;n++)if(f=n/e,h=f*f,c=t/(1e-4+h)-s,c>0)for(y=n*i,a=0;a<e;a++)for(u=y+a,l=0;l<e;l++)o[r*l+u]+=c},this.addPlaneZ=function(t,s){const e=this.size,i=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,u,A=e*Math.sqrt(t/s);for(A>e&&(A=e),l=0;l<A;l++)if(f=l/e,h=f*f,c=t/(1e-4+h)-s,c>0)for(y=r*l,n=0;n<e;n++)for(u=y+n*i,a=0;a<e;a++)o[u+a]+=c},this.setCell=function(t,s,e,i){const r=this.size2*e+this.size*s+t;this.field[r]=i},this.getCell=function(t,s,e){const i=this.size2*e+this.size*s+t;return this.field[i]},this.blur=function(t=1){const s=this.field,e=s.slice(),i=this.size,r=this.size2;for(let o=0;o<i;o++)for(let a=0;a<i;a++)for(let n=0;n<i;n++){const l=r*n+i*a+o;let h=e[l],c=1;for(let s=-1;s<=1;s+=2){const l=s+o;if(!(l<0||l>=i))for(let s=-1;s<=1;s+=2){const o=s+a;if(!(o<0||o>=i))for(let s=-1;s<=1;s+=2){const a=s+n;if(a<0||a>=i)continue;const f=e[r*a+i*o+l];c++,h+=t*(f-h)/c}}}s[l]=h}},this.reset=function(){for(let t=0;t<this.size3;t++)this.normal_cache[3*t]=0,this.field[t]=0,this.palette[3*t]=this.palette[3*t+1]=this.palette[3*t+2]=0},this.render=function(t){this.begin();const s=this.size-2;for(let e=1;e<s;e++){const i=this.size2*e,r=(e-this.halfsize)/this.halfsize;for(let e=1;e<s;e++){const o=i+this.size*e,a=(e-this.halfsize)/this.halfsize;for(let e=1;e<s;e++){z((e-this.halfsize)/this.halfsize,a,r,o+e,this.isolation,t)}}}this.end(t)},this.generateGeometry=function(){return console.warn("THREE.MarchingCubes: generateGeometry() now returns BufferGeometry"),this.generateBufferGeometry()},this.generateBufferGeometry=function(){const s=new t.BufferGeometry;let e=new Float32Array,i=new Float32Array,r=new Float32Array,o=new Float32Array;const a=this;return this.render((function(t){a.hasPositions&&(e=p(e,t.positionArray,3*t.count)),a.hasNormals&&(i=p(i,t.normalArray,3*t.count)),a.hasColors&&(r=p(r,t.colorArray,3*t.count)),a.hasUvs&&(o=p(o,t.uvArray,2*t.count)),t.count=0})),this.hasPositions&&s.setAttribute("position",new t.BufferAttribute(e,3)),this.hasNormals&&s.setAttribute("normal",new t.BufferAttribute(i,3)),this.hasColors&&s.setAttribute("color",new t.BufferAttribute(r,3)),this.hasUvs&&s.setAttribute("uv",new t.BufferAttribute(o,2)),s},this.init(s)}}s.prototype.isMarchingCubes=!0;const e=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),i=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);exports.MarchingCubes=s,exports.edgeTable=e,exports.triTable=i;
