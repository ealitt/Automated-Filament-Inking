"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("three");const e={klein:function(t,e,o){let s,r,a;e*=Math.PI,t*=2*Math.PI,(e*=2)<Math.PI?(s=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(e)*Math.cos(t),a=-8*Math.sin(e)-2*(1-Math.cos(e)/2)*Math.sin(e)*Math.cos(t)):(s=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(t+Math.PI),a=-8*Math.sin(e)),r=-2*(1-Math.cos(e)/2)*Math.sin(t),o.set(s,r,a)},plane:function(t,e){return(o,s,r)=>{const a=o*t,n=s*e;r.set(a,0,n)}},mobius:function(t,e,o){t-=.5;const s=2*Math.PI*e;let r,a,n;r=Math.cos(s)*(2+t*Math.cos(s/2)),a=Math.sin(s)*(2+t*Math.cos(s/2)),n=t*Math.sin(s/2),o.set(r,a,n)},mobius3d:function(t,e,o){t*=Math.PI,e*=2*Math.PI;const s=(t*=2)/2;let r,a,n;r=.125*Math.cos(e)*Math.cos(s)-.65*Math.sin(e)*Math.sin(s),n=.125*Math.cos(e)*Math.sin(s)+.65*Math.sin(e)*Math.cos(s),a=(2.25+r)*Math.sin(t),r=(2.25+r)*Math.cos(t),o.set(r,a,n)},TubeGeometry:function(e,o,s,r,a){this.path=e,this.segments=o||64,this.radius=s||1,this.segmentsRadius=r||8,this.closed=a||!1;const n=this,c=this.segments+1,h=e.computeFrenetFrames(o,a),i=h.tangents,M=h.normals,u=h.binormals;this.tangents=i,this.normals=M,this.binormals=u;const m=new t.Vector3;t.ParametricGeometry.call(this,((t,o,s)=>{o*=2*Math.PI;let r=t*(c-1);r=Math.floor(r),e.getPointAt(t,m);const a=M[r],h=u[r],i=-n.radius*Math.cos(o),y=n.radius*Math.sin(o);m.x+=i*a.x+y*h.x,m.y+=i*a.y+y*h.y,m.z+=i*a.z+y*h.z,s.copy(m)}),o,r)}};e.TubeGeometry.prototype=Object.create(t.BufferGeometry.prototype),e.TubeGeometry.prototype.constructor=e.TubeGeometry,e.TorusKnotGeometry=function(o,s,r,a,n,c){this.radius=o||200,this.tube=s||40,this.segmentsT=r||64,this.segmentsR=a||8,this.p=n||2,this.q=c||3;class h extends t.Curve{constructor(){super()}getPoint(e,s){const r=s||new t.Vector3;e*=2*Math.PI;const a=(1+.5*Math.cos(c*e))*Math.cos(n*e),h=(1+.5*Math.cos(c*e))*Math.sin(n*e),i=.5*Math.sin(c*e);return r.set(a,h,i).multiplyScalar(o)}}const i=r,M=a,u=new h;e.TubeGeometry.call(this,u,i,s,M,!0,!1)},e.TorusKnotGeometry.prototype=Object.create(t.BufferGeometry.prototype),e.TorusKnotGeometry.prototype.constructor=e.TorusKnotGeometry,e.SphereGeometry=function(e,o,s){t.ParametricGeometry.call(this,(function(t,o,s){t*=Math.PI,o*=2*Math.PI;const r=e*Math.sin(t)*Math.cos(o),a=e*Math.sin(t)*Math.sin(o),n=e*Math.cos(t);s.set(r,a,n)}),o,s)},e.SphereGeometry.prototype=Object.create(t.BufferGeometry.prototype),e.SphereGeometry.prototype.constructor=e.SphereGeometry,e.PlaneGeometry=function(e,o,s,r){t.ParametricGeometry.call(this,(function(t,s,r){const a=t*e,n=s*o;r.set(a,0,n)}),s,r)},e.PlaneGeometry.prototype=Object.create(t.BufferGeometry.prototype),e.PlaneGeometry.prototype.constructor=e.PlaneGeometry,exports.ParametricGeometries=e;
