"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("three");const e=(o,t,p,y,a,i,s)=>{o=void 0!==o?o:new r.Vector3(0,0,0);var n=(t=void 0!==t?t:10)/2,l=(p=void 0!==p?p:1,y=void 0!==y?y:0,a=void 0!==a?a:1,i=void 0!==i?i:2,s=void 0!==s?s:3,[new r.Vector3(o.x-n,o.y,o.z-n),new r.Vector3(o.x-n,o.y,o.z+n),new r.Vector3(o.x+n,o.y,o.z+n),new r.Vector3(o.x+n,o.y,o.z-n)]),v=[l[y],l[a],l[i],l[s]];if(0<=--p){var u=[];return Array.prototype.push.apply(u,e(v[0],n,p,y,s,i,a)),Array.prototype.push.apply(u,e(v[1],n,p,y,a,i,s)),Array.prototype.push.apply(u,e(v[2],n,p,y,a,i,s)),Array.prototype.push.apply(u,e(v[3],n,p,i,a,y,s)),u}return v},o=(e,t,p,y,a,i,s,n,l,v,u)=>{e=void 0!==e?e:new r.Vector3(0,0,0);var c=(t=void 0!==t?t:10)/2,d=(p=void 0!==p?p:1,y=void 0!==y?y:0,a=void 0!==a?a:1,i=void 0!==i?i:2,s=void 0!==s?s:3,n=void 0!==n?n:4,l=void 0!==l?l:5,v=void 0!==v?v:6,u=void 0!==u?u:7,[new r.Vector3(e.x-c,e.y+c,e.z-c),new r.Vector3(e.x-c,e.y+c,e.z+c),new r.Vector3(e.x-c,e.y-c,e.z+c),new r.Vector3(e.x-c,e.y-c,e.z-c),new r.Vector3(e.x+c,e.y-c,e.z-c),new r.Vector3(e.x+c,e.y-c,e.z+c),new r.Vector3(e.x+c,e.y+c,e.z+c),new r.Vector3(e.x+c,e.y+c,e.z-c)]),h=[d[y],d[a],d[i],d[s],d[n],d[l],d[v],d[u]];if(--p>=0){var A=[];return Array.prototype.push.apply(A,o(h[0],c,p,y,s,n,u,v,l,i,a)),Array.prototype.push.apply(A,o(h[1],c,p,y,u,v,a,i,l,n,s)),Array.prototype.push.apply(A,o(h[2],c,p,y,u,v,a,i,l,n,s)),Array.prototype.push.apply(A,o(h[3],c,p,i,s,y,a,v,u,n,l)),Array.prototype.push.apply(A,o(h[4],c,p,i,s,y,a,v,u,n,l)),Array.prototype.push.apply(A,o(h[5],c,p,n,s,i,l,v,a,y,u)),Array.prototype.push.apply(A,o(h[6],c,p,n,s,i,l,v,a,y,u)),Array.prototype.push.apply(A,o(h[7],c,p,v,l,i,a,y,s,n,u)),A}return h};exports.gosper=r=>(r=void 0!==r?r:1,function(r){var e=0,o=0,t=0,p=[0,0,0],y=r.fractal;for(let i=0,s=y.length;i<s;i++){var a=y[i];"+"===a?t+=r.angle:"-"===a?t-=r.angle:"F"===a&&(e+=r.size*Math.cos(t),o+=-r.size*Math.sin(t),p.push(e,o,0))}return p}({fractal:function(r){var e,o=r.axiom;for(let p=0,y=r.steps;0<=y?p<y:p>y;0<=y?p++:p--){e="";for(let p=0,y=o.length;p<y;p++){var t=o[p];t in r.rules?e+=r.rules[t]:e+=t}o=e}return e}({axiom:"A",steps:4,rules:{A:"A+BF++BF-FA--FAFA-BF+",B:"-FA+BFBF++BF+FA--FA-B"}}),size:r,angle:Math.PI/3})),exports.hilbert2D=e,exports.hilbert3D=o;
